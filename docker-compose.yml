services:
  # Front-end Web Application
  client:
    build: ./client
    container_name: mern-client
    restart: always
    networks:
      - mern-network

  # Back-end API
  server:
    build: ./server
    container_name: mern-server
    restart: always
    environment:
      # The server will connect to the 'mongodb' service on the same network
      - MONGO_URI=mongodb://mongodb:27017/mern-database
    depends_on:
      mongodb:
        condition: service_healthy  # Wait for MongoDB to be healthy
    ports:
      - "5000:5000" # Expose server port to the host
    networks:
      - mern-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Back-end Database
  mongodb:
    image: mongo:latest
    container_name: mern-mongodb
    restart: always
    volumes:
      - mongodb_data:/data/db
    networks:
      - mern-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database Graphical Interface
  mongo-express:
    image: mongo-express:latest
    container_name: mern-mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - mern-network

  # Nginx Proxy for HTTPS
  nginx:
    image: nginx:1.23-alpine
    container_name: mern-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/nginx/ssl:ro
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_healthy
    networks:
      - mern-network

networks:
  mern-network:
    driver: bridge

volumes:
  mongodb_data:
